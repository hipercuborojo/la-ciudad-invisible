webpackHotUpdate_N_E("pages/index",{

/***/ "./components/atoms/ca.tsx":
/*!*********************************!*\
  !*** ./components/atoms/ca.tsx ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {var mainSketchFactory = function mainSketchFactory(height, width) {\n  console.log(\"a\");\n  return function (p) {\n    p.setup = function () {\n      p.createCanvas(width || p.windowWidth, height || p.windowHeight);\n    };\n\n    p.draw = function () {\n      p.background(89, 123, 12);\n    };\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (mainSketchFactory);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9hdG9tcy9jYS50c3g/MWNmMyJdLCJuYW1lcyI6WyJtYWluU2tldGNoRmFjdG9yeSIsImhlaWdodCIsIndpZHRoIiwiY29uc29sZSIsImxvZyIsInAiLCJzZXR1cCIsImNyZWF0ZUNhbnZhcyIsIndpbmRvd1dpZHRoIiwid2luZG93SGVpZ2h0IiwiZHJhdyIsImJhY2tncm91bmQiXSwibWFwcGluZ3MiOiJBQUVBO0FBQUEsa0RBQU1BLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsQ0FBQ0MsTUFBRCxFQUFrQkMsS0FBbEIsRUFBcUM7QUFDM0RDLFNBQU8sQ0FBQ0MsR0FBUixDQUFZLEdBQVo7QUFDQSxTQUFPLFVBQUNDLENBQUQsRUFBVztBQUNkQSxLQUFDLENBQUNDLEtBQUYsR0FBVSxZQUFNO0FBQ1pELE9BQUMsQ0FBQ0UsWUFBRixDQUFlTCxLQUFLLElBQUlHLENBQUMsQ0FBQ0csV0FBMUIsRUFBdUNQLE1BQU0sSUFBSUksQ0FBQyxDQUFDSSxZQUFuRDtBQUNILEtBRkQ7O0FBSUFKLEtBQUMsQ0FBQ0ssSUFBRixHQUFTLFlBQU07QUFDWEwsT0FBQyxDQUFDTSxVQUFGLENBQWEsRUFBYixFQUFpQixHQUFqQixFQUFzQixFQUF0QjtBQUNILEtBRkQ7QUFHSCxHQVJEO0FBU0gsQ0FYRDs7QUFhZVgsZ0ZBQWYiLCJmaWxlIjoiLi9jb21wb25lbnRzL2F0b21zL2NhLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwNSBmcm9tIFwicDVcIjtcblxuY29uc3QgbWFpblNrZXRjaEZhY3RvcnkgPSAoaGVpZ2h0PzogbnVtYmVyLCB3aWR0aD86IG51bWJlcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiYVwiKTtcbiAgICByZXR1cm4gKHA6IHA1KSA9PiB7XG4gICAgICAgIHAuc2V0dXAgPSAoKSA9PiB7XG4gICAgICAgICAgICBwLmNyZWF0ZUNhbnZhcyh3aWR0aCB8fCBwLndpbmRvd1dpZHRoLCBoZWlnaHQgfHwgcC53aW5kb3dIZWlnaHQpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHAuZHJhdyA9ICgpID0+IHtcbiAgICAgICAgICAgIHAuYmFja2dyb3VuZCg4OSwgMTIzLCAxMik7XG4gICAgICAgIH07XG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1haW5Ta2V0Y2hGYWN0b3J5O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/atoms/ca.tsx\n");

/***/ })

})